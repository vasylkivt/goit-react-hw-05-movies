{"version":3,"file":"static/js/961.dc51402f.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLink = location.state?.from ?? '/';\n\n  const [movie, setMovie] = useState();\n\n  useEffect(() => {\n    const getMovieByMovieId = async () => {\n      const response = await TMDB_API.getMovieByMovieId(movieId);\n\n      setMovie(response);\n    };\n    getMovieByMovieId();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <Link to={backLink}>Back to </Link>\n          <div>\n            <img src={`${IMG_URL}${movie.poster_path}`} alt=\"\" />\n\n            <p>{movie.title}</p>\n            <p>{movie.id}</p>\n            {/* <p>{movie.genres}</p> */}\n            <p>{movie.vote_average}</p>\n            <p>{movie.vote_count}</p>\n            <p>{movie.status}</p>\n            <p>{movie.release_date}</p>\n            <p>{movie.popularity}</p>\n            <p>{movie.homepage}</p>\n            <p>{movie.overview}</p>\n          </div>\n          <Link to={'cast'}>Cast</Link>\n          <Link to={'reviews'}>Reviews</Link>\n          <Outlet />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async param => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async movieId => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_location$state$from","_location$state","movieId","useParams","backLink","useLocation","state","from","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","getMovieByMovieId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","stop","apply","arguments","_jsx","_Fragment","children","_jsxs","Link","to","src","concat","poster_path","alt","title","id","vote_average","vote_count","status","release_date","popularity","homepage","overview","Outlet","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","abrupt","data","results","_x","_ref2","_callee2","_context2","_x2","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x3","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x4","searchMovieByQuery","_ref5","_callee5","query","_context5","_x5"],"sourceRoot":""}