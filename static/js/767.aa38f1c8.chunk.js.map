{"version":3,"file":"static/js/767.aa38f1c8.chunk.js","mappings":"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","sources":["components/Reviews/Reviews.style.jsx","components/Reviews/Reviews.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 35px;\n  padding: 30px;\n  border-radius: 10px;\n  background-color: ${({ theme: { colors } }) => colors.backgroundColorDark};\n`;\n\nexport const Item = styled.li``;\nexport const UserInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  border-radius: 10px;\n  padding: 5px;\n  margin-bottom: 10px;\n  background-color: ${({ theme: { colors } }) => colors.backgroundColorLight};\n`;\nexport const Image = styled.img`\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  object-fit: cover;\n`;\nexport const TextWrap = styled.div``;\nexport const Name = styled.p``;\nexport const Rating = styled.p``;\nexport const CommentWrap = styled.div``;\n\nexport const Comment = styled.p`\n  margin-bottom: 5px;\n  color: ${({ theme: { colors } }) => colors.textColorLight};\n`;\nexport const Date = styled.p`\n  color: ${({ theme: { colors } }) => colors.yellow};\n`;\n","import { Notification } from 'components';\nimport { IMG_URL } from 'constants';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\nimport default_vertical_poster_path from '../../styles/default_vertical_poster_path.jpg';\nimport { formatDate } from 'helpers';\nimport {\n  Comment,\n  CommentWrap,\n  Date,\n  Image,\n  Item,\n  List,\n  Name,\n  Rating,\n  TextWrap,\n  UserInfo,\n} from './Reviews.style';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n\n    const getMovieReviewsByMovieId = async () => {\n      try {\n        const response = await TMDB_API.getMovieReviewsByMovieId(\n          movieId,\n          controller\n        );\n\n        setReviews(response);\n        setError(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n      }\n    };\n    getMovieReviewsByMovieId();\n\n    return () => controller.abort();\n  }, [movieId]);\n  return (\n    <>\n      {reviews && (\n        <List>\n          {reviews.map(\n            ({\n              content,\n              id,\n              updated_at,\n              author_details: { rating, name, avatar_path },\n            }) => {\n              const imgUrl = avatar_path?.includes('https')\n                ? default_vertical_poster_path\n                : avatar_path\n                ? `${IMG_URL}${avatar_path}`\n                : default_vertical_poster_path;\n\n              return (\n                <Item key={id}>\n                  <UserInfo>\n                    <Image src={imgUrl} alt=\"\" />\n                    <TextWrap>\n                      <Name>Author: {name}</Name>\n                      <Rating>Rating: {rating}</Rating>\n                    </TextWrap>\n                  </UserInfo>\n\n                  <CommentWrap>\n                    <Comment>{content} </Comment>\n                    <Date>{formatDate(updated_at)}</Date>\n                  </CommentWrap>\n                </Item>\n              );\n            }\n          )}\n        </List>\n      )}\n\n      <Notification>\n        {!error &&\n          reviews?.length === 0 &&\n          'Sorry. There are no reviews... üò≠. You can view the cast üòé. '}\n        {error && `‚ùå Something went wrong - ${error}`}\n      </Notification>\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","backgroundColorDark","Item","li","_templateObject2","UserInfo","div","_templateObject3","_ref2","backgroundColorLight","Image","img","_templateObject4","TextWrap","_templateObject5","Name","p","_templateObject6","Rating","_templateObject7","CommentWrap","_templateObject8","Comment","_templateObject9","_ref3","textColorLight","Date","_templateObject10","_ref4","yellow","movieId","useParams","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","_useState3","_useState4","error","setError","useEffect","controller","AbortController","getMovieReviewsByMovieId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","abort","_jsxs","_Fragment","children","_jsx","map","content","id","updated_at","_ref2$author_details","author_details","rating","name","avatar_path","imgUrl","includes","default_vertical_poster_path","concat","IMG_URL","src","alt","formatDate","Notification","length","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","signal","data","results","_x","_x2","getMovieByMovieId","_callee2","_context2","_x3","_x4","getMovieCastByMovieId","_callee3","_context3","cast","_x5","_x6","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","_context5","_x9","_x10"],"sourceRoot":""}