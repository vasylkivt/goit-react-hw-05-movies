{"version":3,"file":"static/js/544.453e5fec.chunk.js","mappings":"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","sources":["pages/Home/Home.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { Button, MovieList, Notification } from 'components';\nimport { useEffect, useState } from 'react';\nimport { TMDB_API } from 'services';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    const getTrendingAllDay = async () => {\n      try {\n        const response = await TMDB_API.getTrendMovieByParam('day', controller);\n\n        setMovies(response);\n        setError(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n\n        setError(error.message);\n      }\n    };\n    getTrendingAllDay();\n\n    return () => controller.abort();\n  }, []);\n\n  return (\n    <>\n      <Notification $marginBottom={'25px'}>\n        {!error && 'In trend Today'}\n        {error && `‚ùå Something went wrong - ${error}`}\n      </Notification>\n      <MovieList movies={movies} />\n      <Button $marginLeft={'auto'}>{'Load More'}</Button>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","useEffect","controller","AbortController","getTrendingAllDay","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","getTrendMovieByParam","sent","t0","message","abrupt","stop","apply","arguments","abort","_jsxs","_Fragment","children","Notification","$marginBottom","concat","_jsx","MovieList","Button","$marginLeft","axios","defaults","baseURL","API_KEY","param","get","signal","data","results","_x","_x2","getMovieByMovieId","_ref2","_callee2","movieId","_context2","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","_context5","_x9","_x10"],"sourceRoot":""}