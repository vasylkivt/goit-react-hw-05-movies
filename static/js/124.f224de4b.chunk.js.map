{"version":3,"file":"static/js/124.f224de4b.chunk.js","mappings":"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","sources":["components/Cast/Cast.style.jsx","components/Cast/Cast.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform ${({ theme }) => theme.animation.cubicBezier},\n    box-shadow ${({ theme }) => theme.animation.cubicBezier};\n\n  &:hover {\n    transform: scale(1.03);\n\n    box-shadow: 0 0 10px 0 ${({ theme: { colors } }) => colors.accent};\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n  object-fit: cover;\n`;\nexport const InfoWrap = styled.div`\n  padding: 20px 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.p``;\n","import { Notification, SkeletonMovie } from 'components';\nimport { IMG_URL } from 'constants';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nimport default_vertical_poster_path from '../../styles/default_vertical_poster_path.jpg';\nimport { Image, InfoWrap, Item, List, Text, Title } from './Cast.style';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState();\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const controller = new AbortController();\n    const getMovieCastByMovieId = async () => {\n      try {\n        setIsLoading(true);\n        const response = await TMDB_API.getMovieCastByMovieId(\n          movieId,\n          controller\n        );\n\n        setCast(response);\n        setError(false);\n        setIsLoading(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    getMovieCastByMovieId();\n\n    return () => controller.abort();\n  }, [movieId]);\n  return (\n    <>\n      {cast && !isLoading && (\n        <List>\n          {cast?.map(({ profile_path, id, original_name, popularity }) => (\n            <Item key={id}>\n              <Image\n                loading=\"lazy\"\n                width=\"250\"\n                height=\"375\"\n                src={\n                  profile_path\n                    ? `${IMG_URL}/original${profile_path}`\n                    : default_vertical_poster_path\n                }\n                alt={original_name}\n              />\n              <InfoWrap>\n                <Title>{original_name}</Title>\n                <Text>Popularity: {popularity}</Text>\n              </InfoWrap>\n            </Item>\n          ))}\n        </List>\n      )}\n      {isLoading && <SkeletonMovie />}\n\n      <Notification>\n        {!error && cast?.length === 0 && 'Sorry. There are no cast... üò≠ '}\n        {error && `‚ùå Something went wrong - ${error}`}\n      </Notification>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, page, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return response.data;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","_ref","theme","animation","cubicBezier","_ref2","_ref3","colors","accent","Image","img","_templateObject3","InfoWrap","div","_templateObject4","Title","h2","_templateObject5","Text","p","_templateObject6","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","controller","AbortController","getMovieCastByMovieId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","abort","_jsxs","_Fragment","children","_jsx","map","profile_path","id","original_name","popularity","loading","width","height","src","concat","IMG_URL","default_vertical_poster_path","alt","SkeletonMovie","Notification","length","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","signal","data","results","_x","_x2","getMovieByMovieId","_callee2","_context2","_x3","_x4","_callee3","_context3","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","page","_context5","_x9","_x10","_x11"],"sourceRoot":""}