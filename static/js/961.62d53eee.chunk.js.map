{"version":3,"file":"static/js/961.62d53eee.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { Button, MovieDetailsItem, Notification } from 'components';\nimport styled from 'styled-components';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [movie, setMovie] = useState();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n\n    const getMovieByMovieId = async () => {\n      try {\n        const response = await TMDB_API.getMovieByMovieId(movieId, controller);\n\n        setMovie(response);\n        setError(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n\n        setError(error.message);\n      }\n    };\n    getMovieByMovieId();\n\n    return () => controller.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>\n        <Button $marginBottom={'20px'}>Back</Button>\n      </Link>\n      {movie && (\n        <>\n          <MovieDetailsItem movie={movie} />\n          <BtnWrap>\n            <Link to=\"cast\">\n              <Button>Cast</Button>\n            </Link>\n            <Link to=\"reviews\">\n              <Button>Reviews</Button>\n            </Link>\n          </BtnWrap>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n      {error && (\n        <Notification>{`‚ùå Something went wrong - ${error}`}</Notification>\n      )}\n    </>\n  );\n};\n\nexport const BtnWrap = styled.div`\n  display: flex;\n  gap: 30px;\n  margin-bottom: 30px;\n`;\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["BtnWrap","styled","div","_templateObject","_taggedTemplateLiteral","_location$state$from","_location$state","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","useEffect","controller","AbortController","getMovieByMovieId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","abort","_jsxs","_Fragment","children","_jsx","Link","to","current","Button","$marginBottom","MovieDetailsItem","Suspense","fallback","Outlet","Notification","concat","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","signal","data","results","_x","_x2","_ref2","_callee2","_context2","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","_context5","_x9","_x10"],"sourceRoot":""}