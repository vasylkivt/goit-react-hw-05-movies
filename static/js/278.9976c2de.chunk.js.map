{"version":3,"file":"static/js/278.9976c2de.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { MovieList, Notification, SearchBar, SkeletonMovie } from 'components';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = value => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (query) return;\n    const controller = new AbortController();\n\n    const getTrendMovieByParam = async () => {\n      setIsLoading(true);\n      try {\n        const response = await TMDB_API.getTrendMovieByParam(\n          'week',\n          controller\n        );\n        setMovies(response);\n\n        setError(false);\n        setIsLoading(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    getTrendMovieByParam();\n    return () => controller.abort();\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    const controller = new AbortController();\n\n    const searchMovieByQuery = async () => {\n      try {\n        const response = await TMDB_API.searchMovieByQuery(query, controller);\n\n        setMovies(response);\n        setError(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n      }\n    };\n    searchMovieByQuery();\n\n    return () => controller.abort();\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {!error && !query && (\n        <Notification $marginBottom={'25px'}>In this week's trend</Notification>\n      )}\n      {!error && query && movies?.length !== 0 && (\n        <Notification $marginBottom={'25px'}>\n          {`Movies by result '${query}'`}\n        </Notification>\n      )}\n      <Notification $marginBottom={'25px'}>\n        {!error &&\n          movies?.length === 0 &&\n          query &&\n          `Sorry. There are no movies by result '${query}' ... üò≠  `}\n      </Notification>\n      {error && (\n        <Notification> {`‚ùå Something went wrong - ${error}`}</Notification>\n      )}\n      {!isLoading && <MovieList movies={movies} />}\n      {isLoading && <SkeletonMovie />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","controller","AbortController","getTrendMovieByParam","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","abort","searchMovieByQuery","_ref2","_callee2","_context2","_jsxs","_Fragment","children","_jsx","SearchBar","onSubmit","value","Notification","$marginBottom","length","concat","MovieList","SkeletonMovie","axios","defaults","baseURL","API_KEY","param","signal","data","results","_x","_x2","getMovieByMovieId","movieId","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","_ref5","_callee5","_context5","_x9","_x10"],"sourceRoot":""}