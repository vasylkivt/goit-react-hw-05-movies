{"version":3,"file":"static/js/278.f543cac4.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { MovieList, SearchBar } from 'components';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = value => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (query) return;\n    const controller = new AbortController();\n\n    const getTrendMovieByParam = async () => {\n      try {\n        const response = await TMDB_API.getTrendMovieByParam(\n          'week',\n          controller\n        );\n        setMovies(response);\n      } catch (error) {}\n    };\n    getTrendMovieByParam();\n    return () => controller.abort();\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    const controller = new AbortController();\n\n    const searchMovieByQuery = async () => {\n      try {\n        const response = await TMDB_API.searchMovieByQuery(query, controller);\n\n        setMovies(response);\n      } catch (error) {}\n    };\n    searchMovieByQuery();\n\n    return () => controller.abort();\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","controller","AbortController","getTrendMovieByParam","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","stop","apply","arguments","abort","searchMovieByQuery","_ref2","_callee2","_context2","_jsxs","_Fragment","children","_jsx","SearchBar","onSubmit","value","MovieList","axios","defaults","baseURL","API_KEY","param","concat","signal","abrupt","data","results","_x","_x2","getMovieByMovieId","movieId","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","_ref5","_callee5","_context5","_x9","_x10"],"sourceRoot":""}