{"version":3,"file":"static/js/278.fff092e5.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { MovieList, Notification, SearchBar } from 'components';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = value => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (query) return;\n    const controller = new AbortController();\n\n    const getTrendMovieByParam = async () => {\n      try {\n        const response = await TMDB_API.getTrendMovieByParam(\n          'week',\n          controller\n        );\n        setMovies(response);\n\n        setError(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n      }\n    };\n    getTrendMovieByParam();\n    return () => controller.abort();\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    const controller = new AbortController();\n\n    const searchMovieByQuery = async () => {\n      try {\n        const response = await TMDB_API.searchMovieByQuery(query, controller);\n\n        setMovies(response);\n        setError(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n      }\n    };\n    searchMovieByQuery();\n\n    return () => controller.abort();\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {!error && !query && (\n        <Notification $marginBottom={'25px'}>In this week's trend</Notification>\n      )}\n      {!error && query && movies?.length !== 0 && (\n        <Notification $marginBottom={'25px'}>\n          {`Movies by result '${query}'`}\n        </Notification>\n      )}\n      <Notification $marginBottom={'25px'}>\n        {!error &&\n          movies?.length === 0 &&\n          query &&\n          `Sorry. There are no movies by result '${query}' ... üò≠  `}\n      </Notification>\n      {error && (\n        <Notification> {`‚ùå Something went wrong - ${error}`}</Notification>\n      )}\n      <MovieList movies={movies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","useEffect","controller","AbortController","getTrendMovieByParam","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","abort","searchMovieByQuery","_ref2","_callee2","_context2","_jsxs","_Fragment","children","_jsx","SearchBar","onSubmit","value","Notification","$marginBottom","length","concat","MovieList","axios","defaults","baseURL","API_KEY","param","signal","data","results","_x","_x2","getMovieByMovieId","movieId","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","_ref5","_callee5","_context5","_x9","_x10"],"sourceRoot":""}