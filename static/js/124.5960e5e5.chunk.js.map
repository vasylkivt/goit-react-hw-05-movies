{"version":3,"file":"static/js/124.5960e5e5.chunk.js","mappings":"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","sources":["components/Cast/Cast.style.jsx","components/Cast/Cast.jsx","services/themoviedbAPI.js"],"sourcesContent":["import styled from 'styled-components';\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  transition: transform ${({ theme }) => theme.animation.cubicBezier},\n    box-shadow ${({ theme }) => theme.animation.cubicBezier};\n\n  &:hover {\n    transform: scale(1.03);\n\n    box-shadow: 0 0 10px 0 ${({ theme: { colors } }) => colors.accent};\n  }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n  object-fit: cover;\n`;\nexport const InfoWrap = styled.div`\n  padding: 20px 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 5px;\n`;\n\nexport const Text = styled.p``;\n","import { Notification } from 'components';\nimport { IMG_URL } from 'constants';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nimport default_vertical_poster_path from '../../styles/default_vertical_poster_path.jpg';\nimport { Image, InfoWrap, Item, List, Text, Title } from './Cast.style';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const controller = new AbortController();\n    const getMovieCastByMovieId = async () => {\n      try {\n        const response = await TMDB_API.getMovieCastByMovieId(\n          movieId,\n          controller\n        );\n\n        setCast(response);\n        setError(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n      }\n    };\n    getMovieCastByMovieId();\n\n    return () => controller.abort();\n  }, [movieId]);\n  return (\n    <>\n      {cast && (\n        <List>\n          {cast?.map(({ profile_path, id, original_name, popularity }) => (\n            <Item key={id}>\n              <Image\n                loading=\"lazy\"\n                width=\"250\"\n                height=\"375\"\n                src={\n                  profile_path\n                    ? `${IMG_URL}${profile_path}`\n                    : default_vertical_poster_path\n                }\n                alt={original_name}\n              />\n              <InfoWrap>\n                <Title>{original_name}</Title>\n                <Text>Popularity: {popularity}</Text>\n              </InfoWrap>\n            </Item>\n          ))}\n        </List>\n      )}\n      {/* {cast &&\n        cast.map(({ profile_path, id, original_name, popularity }) => (\n          <div key={id}>\n            <img src={`${IMG_URL}${profile_path}`} alt=\"\" />\n            <p>{original_name}</p>\n            <p>{popularity}</p>\n          </div>\n        ))} */}\n      <Notification>\n        {!error && cast?.length === 0 && 'Sorry. There are no cast... üò≠ '}\n        {error && `‚ùå Something went wrong - ${error}`}\n      </Notification>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["List","styled","ul","_templateObject","_taggedTemplateLiteral","Item","li","_templateObject2","_ref","theme","animation","cubicBezier","_ref2","_ref3","colors","accent","Image","img","_templateObject3","InfoWrap","div","_templateObject4","Title","h2","_templateObject5","Text","p","_templateObject6","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","useEffect","controller","AbortController","getMovieCastByMovieId","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","abort","_jsxs","_Fragment","children","_jsx","map","profile_path","id","original_name","popularity","loading","width","height","src","concat","IMG_URL","default_vertical_poster_path","alt","Notification","length","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","signal","data","results","_x","_x2","getMovieByMovieId","_callee2","_context2","_x3","_x4","_callee3","_context3","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","_context5","_x9","_x10"],"sourceRoot":""}