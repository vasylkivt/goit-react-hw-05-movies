{"version":3,"file":"static/js/278.eac9dbac.chunk.js","mappings":"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","sources":["pages/Movies/Movies.jsx","services/themoviedbAPI.js"],"sourcesContent":["import {\n  Button,\n  MovieList,\n  Notification,\n  SearchBar,\n  SkeletonMovie,\n} from 'components';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [loadingMoreMovie, setIsLoadingMoreMovie] = useState(false);\n  const [page, setPage] = useState(1);\n  const [isVisible, setIsVisible] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  const movieListRef = useRef();\n\n  const handleSubmit = value => {\n    const nextParams = value !== '' ? { query: value } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (query) return;\n    const controller = new AbortController();\n\n    const getTrendMovieByParam = async () => {\n      setIsLoading(true);\n      try {\n        const response = await TMDB_API.getTrendMovieByParam(\n          'week',\n          controller\n        );\n        setMovies(response);\n\n        setError(false);\n        setIsLoading(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    getTrendMovieByParam();\n    return () => controller.abort();\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n    if (page === 1) {\n      setMovies([]);\n      setIsLoading(true);\n    }\n\n    const controller = new AbortController();\n\n    const searchMovieByQuery = async () => {\n      try {\n        setIsLoadingMoreMovie(true);\n        const {\n          total_pages,\n          results,\n          page: currentPage,\n        } = await TMDB_API.searchMovieByQuery(query, page, controller);\n        console.log('response:', results);\n\n        setMovies(prev => [...prev, ...results]);\n        setIsVisible(currentPage < total_pages);\n        setError(false);\n        setIsLoadingMoreMovie(false);\n        setIsLoading(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n        setError(error.message);\n        setIsLoadingMoreMovie(false);\n      }\n    };\n    searchMovieByQuery();\n\n    return () => controller.abort();\n  }, [page, query]);\n\n  useEffect(() => {\n    if (page === 1) {\n      return;\n    }\n\n    window.scrollBy({\n      top: movieListRef.current?.scrollHeight || 0,\n      behavior: 'smooth',\n    });\n  }, [page, movies]);\n\n  const handleLoadMore = () => {\n    console.log('click');\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {!isLoading && !error && !query && (\n        <Notification $marginBottom={'25px'}>In this week's trend</Notification>\n      )}\n      {!isLoading && !error && query && movies?.length !== 0 && (\n        <Notification $marginBottom={'25px'}>\n          {`Movies by result '${query}'`}\n        </Notification>\n      )}\n      <Notification $marginBottom={'25px'}>\n        {!isLoading &&\n          !error &&\n          movies?.length === 0 &&\n          query &&\n          `Sorry. There are no movies by result '${query}' ... üò≠  `}\n      </Notification>\n      {error && (\n        <Notification> {`‚ùå Something went wrong - ${error}`}</Notification>\n      )}\n      {!isLoading && <MovieList ref={movieListRef} movies={movies} />}\n      {isLoading && <SkeletonMovie />}\n      {isVisible && query && (\n        <Button onClick={handleLoadMore} $marginLeft={'auto'}>\n          {loadingMoreMovie ? 'Loading...' : 'Load More'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, page, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`,\n    {\n      signal: controller.signal,\n    }\n  );\n\n  return response.data;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","loadingMoreMovie","setIsLoadingMoreMovie","_useState9","_useState10","page","setPage","_useState11","_useState12","isVisible","setIsVisible","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","query","get","movieListRef","useRef","useEffect","controller","AbortController","getTrendMovieByParam","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","abort","searchMovieByQuery","_ref2","_callee2","_yield$TMDB_API$searc","total_pages","results","currentPage","_context2","console","log","concat","_toConsumableArray","_movieListRef$current","window","scrollBy","top","current","scrollHeight","behavior","_jsxs","_Fragment","children","_jsx","SearchBar","onSubmit","value","Notification","$marginBottom","length","MovieList","ref","SkeletonMovie","Button","onClick","$marginLeft","axios","defaults","baseURL","API_KEY","param","signal","data","_x","_x2","getMovieByMovieId","movieId","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","_ref5","_callee5","_context5","_x9","_x10","_x11"],"sourceRoot":""}