{"version":3,"file":"static/js/961.cff3764a.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [movie, setMovie] = useState();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n\n    const getMovieByMovieId = async () => {\n      try {\n        const response = await TMDB_API.getMovieByMovieId(movieId, controller);\n\n        setMovie(response);\n      } catch (error) {}\n    };\n    getMovieByMovieId();\n\n    return () => controller.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <Link to={backLinkLocationRef.current}>Back to </Link>\n          <div>\n            <img src={`${IMG_URL}${movie.poster_path}`} alt=\"\" />\n\n            <p>{movie.title}</p>\n            <p>{movie.id}</p>\n            {/* <p>{movie.genres}</p> */}\n            <p>{movie.vote_average}</p>\n            <p>{movie.vote_count}</p>\n            <p>{movie.status}</p>\n            <p>{movie.release_date}</p>\n            <p>{movie.popularity}</p>\n            <p>{movie.homepage}</p>\n            <p>{movie.overview}</p>\n          </div>\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_location$state$from","_location$state","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","controller","AbortController","getMovieByMovieId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","stop","apply","arguments","abort","_jsx","_Fragment","children","_jsxs","Link","to","current","src","concat","poster_path","alt","title","id","vote_average","vote_count","status","release_date","popularity","homepage","overview","Suspense","fallback","Outlet","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","signal","abrupt","data","results","_x","_x2","_ref2","_callee2","_context2","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","_context5","_x9","_x10"],"sourceRoot":""}