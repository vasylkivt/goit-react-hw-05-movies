{"version":3,"file":"static/js/631.0171a59e.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState();\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const controller = new AbortController();\n    const getMovieCastByMovieId = async () => {\n      try {\n        const response = await TMDB_API.getMovieCastByMovieId(\n          movieId,\n          controller\n        );\n\n        setCast(response);\n      } catch (error) {}\n    };\n    getMovieCastByMovieId();\n\n    return () => controller.abort();\n  }, [movieId]);\n  return (\n    <div>\n      {cast &&\n        cast.map(({ profile_path, id, original_name, popularity }) => (\n          <div key={id}>\n            {' '}\n            <img src={`${IMG_URL}${profile_path}`} alt=\"\" />\n            <p>{original_name}</p>\n            <p>{popularity}</p>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","controller","AbortController","getMovieCastByMovieId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","stop","apply","arguments","abort","_jsx","children","map","_ref2","profile_path","id","original_name","popularity","_jsxs","src","concat","alt","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","signal","abrupt","data","results","_x","_x2","getMovieByMovieId","_callee2","_context2","_x3","_x4","_ref3","_callee3","_context3","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","_context5","_x9","_x10"],"sourceRoot":""}