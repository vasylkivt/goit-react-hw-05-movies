{"version":3,"file":"static/js/961.e51a24cb.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.jsx","services/themoviedbAPI.js"],"sourcesContent":["import { MovieItem } from 'components';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { TMDB_API } from 'services';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  const [movie, setMovie] = useState();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const controller = new AbortController();\n\n    const getMovieByMovieId = async () => {\n      try {\n        const response = await TMDB_API.getMovieByMovieId(movieId, controller);\n\n        setMovie(response);\n      } catch (error) {}\n    };\n    getMovieByMovieId();\n\n    return () => controller.abort();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <div>\n          <Link to={backLinkLocationRef.current}>Back to </Link>\n          <MovieItem movie={movie} />\n          <Link to=\"cast\">Cast</Link>\n          <Link to=\"reviews\">Reviews</Link>\n          <Suspense fallback={<div>Loading subpage...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '267e0ef2e56c2254d403c0d4ffe19052';\n\nconst getTrendMovieByParam = async (param, controller) => {\n  const response = await axios.get(\n    `trending/movie/${param}?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst getMovieByMovieId = async (movieId, controller) => {\n  const response = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`, {\n    signal: controller.signal,\n  });\n  return response.data;\n};\n\nconst getMovieCastByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.cast;\n  //  return response.data.cast.sort((prevActor, nextActor) => nextActor.popularity - prevActor.popularity);\n};\n\nconst getMovieReviewsByMovieId = async (movieId, controller) => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nconst searchMovieByQuery = async (query, controller) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}`,\n    {\n      signal: controller.signal,\n    }\n  );\n  return response.data.results;\n};\n\nexport const TMDB_API = {\n  getTrendMovieByParam,\n  getMovieByMovieId,\n  getMovieReviewsByMovieId,\n  getMovieCastByMovieId,\n  searchMovieByQuery,\n};\n"],"names":["_location$state$from","_location$state","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","_useState","useState","_useState2","_slicedToArray","movie","setMovie","useEffect","controller","AbortController","getMovieByMovieId","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","stop","apply","arguments","abort","_jsx","_Fragment","children","_jsxs","Link","to","current","MovieItem","Suspense","fallback","Outlet","axios","defaults","baseURL","API_KEY","getTrendMovieByParam","param","get","concat","signal","abrupt","data","results","_x","_x2","_ref2","_callee2","_context2","_x3","_x4","getMovieCastByMovieId","_ref3","_callee3","_context3","cast","_x5","_x6","getMovieReviewsByMovieId","_ref4","_callee4","_context4","_x7","_x8","searchMovieByQuery","_ref5","_callee5","query","_context5","_x9","_x10"],"sourceRoot":""}